{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.interceptor.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Likers homepage';\n  authenticated = false;\n  credentials = {username: 'xx', password: '123'};\n  order = {};\n\n  constructor(private http: HttpClient) {\n    this.http.get('me').subscribe(data => {\n      if (data) {\n        this.authenticated = true;\n      }\n      if (!this.authenticated) {\n        window.location.href = 'http://auth.ibm.com:9090/oauth/authorize?' +\n          'client_id=admin&' +\n          'redirect_uri=http://admin.ibm.com:8080/oauth/callback&' +\n          'response_type=code&' +\n          'state=abc';\n      }\n    });\n  }\n\n  getOrder() {\n    this.http.get('api/order/orders/1').subscribe(data => {\n      this.order = data;\n    }, () => {\n      alert('get order fail');\n    });\n  }\n\n  logout() {\n    this.http.post('logout', this.credentials).subscribe(() => {\n      // this.authenticated = false;\n      // defualt : redirect_uri is unknown need overwirte\n      window.location.href = 'http://auth.ibm.com:9090/logout?redirect_uri=http://admin.ibm.com:8080';\n    }, () => {\n      alert('logout fail');\n    });\n  }\n\n  login() {\n    this.http.post('login', this.credentials).subscribe(() => {\n      this.authenticated = true;\n    }, () => {\n      alert('login fail!');\n    });\n  }\n}\n","<div [hidden]=\"!authenticated\" style=\"text-align:center\">\r\n  <h1>\r\n    Welcome dd to Liker {{ title }}!!\r\n  </h1>\r\n  <button (click)=\"getOrder()\" type=\"button\" class=\"btn btn-primary\">Get Order Info</button>\r\n  <p>order id :{{ order.id }}</p>\r\n  <p>order product id :{{ order.productId }}</p>\r\n  <button (click)=\"logout()\" type=\"button\" class=\"btn btn-primary\">Logout</button>\r\n</div>\r\n\r\n<!-- no login in web, direct to auth service -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-lg-4\"></div>\r\n  <div class=\"col-lg-4\">\r\n    <div [hidden]=\"authenticated\">\r\n      <p>please login</p>\r\n      <form role=\"from\" (submit)=\"login()\">\r\n        <div class=\"from-group\">\r\n          <label for=\"username\">User Name:</label> <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\"\r\n            [(ngModel)]=\"credentials.username\"/>\r\n        </div>\r\n        <div class=\"from-group\">\r\n          <label for=\"password\">Password:</label> <input type=\"text\" class=\"form-control\" id=\"password\" name=\"password\"\r\n            [(ngModel)]=\"credentials.password\"/>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-lg-4\"></div>\r\n</div> -->\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse\r\n} from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class RefreshInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      tap(\r\n        () => {},\r\n        error => {\r\n          console.log(error);\r\n          if (error.status === 500 && error.error.message === 'refresh fail') {\r\n            // this.logout();\r\n            // if refresh token timeout then go to auth service to check auth seession expired or not\r\n            window.location.href = 'http://auth.ibm.com:9090/oauth/authorize?' +\r\n              'client_id=admin&' +\r\n              'redirect_uri=http://admin.ibm.com:8080/oauth/callback&' +\r\n              'response_type=code&' +\r\n              'state=abc';\r\n          }\r\n        }));\r\n  }\r\n\r\n  // logout() {\r\n  //   this.http.post('logout', {}).subscribe(() => {\r\n  //     window.location.href = 'http://auth.ibm.com:9090/logout?redirect_uri=http://admin.ibm.com:8080';\r\n  //   });\r\n  // }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { RefreshInterceptor } from './app.interceptor';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n  { provide: HTTP_INTERCEPTORS, useClass: RefreshInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}